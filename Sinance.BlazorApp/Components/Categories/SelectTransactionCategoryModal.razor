@using Sinance.BlazorApp.Business.Model.Category
@using Sinance.BlazorApp.Business.Model.Transaction
@using Sinance.BlazorApp.Business.Services
@using Sinance.BlazorApp.Components.Categories.Model
@inject ICategoryService categoryService

<EditForm Model="@UpdateModel" OnValidSubmit="AssignCategoryAsync" class="hide-validity">
    <BSModal @ref="modal" DataId="modal1">
        <Header>Assign Category</Header>
        <Content>
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="name">Category</label>
                        <CategoriesDropdown @bind-Value="UpdateModel.CategoryId"></CategoriesDropdown>
                    </div>
                </div>
            </div>
        </Content>
        <Footer Context="modal">
            <button class="btn btn-default" Color="BSColor.Secondary" @onclick="modal.HideAsync" type="button">Close</button>
            <button class="btn btn-primary" type="submit">Save changes</button>
        </Footer>
    </BSModal>
</EditForm>

@code {
    private List<TransactionModel> transactions;

    private UpdateFormModel UpdateModel { get; set; } = new();

    [Parameter]
    public EventCallback<TransactionsCategoryUpdatedEvent> OnTransactionsUpdated { get; set; }

    private BSModal modal { get; set; }

    public async Task OpenForTransactionsAsync(List<TransactionModel> transactions)
    {
        UpdateModel.CategoryId = transactions.First().CategoryId;
        this.transactions = transactions;

        await modal.ShowAsync();
    }

    public async Task AssignCategoryAsync()
    {
        var newTransactions = categoryService.AssignCategoryToTransactions(UpdateModel.CategoryId, transactions);

        await OnTransactionsUpdated.InvokeAsync(new TransactionsCategoryUpdatedEvent{
            Transactions = newTransactions
        });

        await modal.HideAsync();
    }

    protected class UpdateFormModel
    {
        public int? CategoryId { get; set; }

        public bool CreateAutoMapping { get; set; }
    }
}