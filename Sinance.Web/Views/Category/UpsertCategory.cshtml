@using System.Linq

@model UpsertCategoryModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts {
    <script type="text/javascript">
        var colorCodeInput = $(".categoryColorCode");
        var selectedMapping = null;
        var selectedAction = null;

        $(function () {
            var defaultColor = "FFFFFF";
            var colorCodeValue = colorCodeInput.val();

            if (colorCodeValue === null || colorCodeValue === "")
                colorCodeInput.val("#" + defaultColor);
            else
                defaultColor = colorCodeValue.substr(1, 6);

            $("#ColorCodePicker").colpick({
                flat: true,
                layout: "hex",
                onChange: UpdateColor,
                submit: 0,
                color: defaultColor
            });

            $("#mappingModal").on("show.bs.modal", function () {
                var actionUrl;

                if (selectedMapping === null)
                    actionUrl = "@Url.Action("AddCategoryMapping", "CategoryMapping")" + "?categoryId=@Model.CategoryModel.Id";
                else if (selectedAction === "Edit")
                    actionUrl = "@Url.Action("EditCategoryMapping", "CategoryMapping")" + "?categoryMappingId=" + selectedMapping;
                else
                    document.location.href = "@Url.Action("RemoveCategoryMapping", "CategoryMapping")" + "?categoryMappingId=" + selectedMapping;

                if (selectedAction !== "Delete") {
                    $.ajax({
                        type: "GET",
                        url: actionUrl,
                        success: function (response) {;
                            $("#mappingModalContent").html(response);
                        }
                    });
                }

            });

            $("#mappingModal").on("hidden.bs.modal", function () {
                $("#mappingModalContent").html("");
            });
        });

        function UpdateColor(hsbColor, hexColor) {
            colorCodeInput.val("#" + hexColor);
        }

        function RemoveCategoryMapping(categoryMappingId, matchValue, categoryId) {
            bootbox.confirm("Weet u zeker dat u de automatische mapping \"" + matchValue + "\" wilt verwijderen?" +
                "<br /><br />" +
                "Alle bijbehorende transacties blijven aan de huidige category verbonden", function (result) {
                    if (result === true) {
                        window.location.href = "@Url.Action("RemoveCategoryMapping", "CategoryMapping")?categoryMappingId=" + categoryMappingId + "&categoryId=" + categoryId;
                    }
                }
            );
        }
    </script>
}

@using (Html.BeginForm("UpsertCategory", "Category", FormMethod.Post))
{

    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    @if (Model.CategoryModel.Id > 0)
                    {
                        <span id="actionTitle">Categorie aanpassen</span>
                    }
                    else
                    {
                        <span id="actionTitle">Categorie toevoegen</span>
                    }
                </div>
                <div class="panel-body">
                    @Html.ValidationSummary(true)

                    @Html.HiddenFor(item => item.CategoryModel.Id)

                    <table class="table" aria-describedby="actionTitle">
                        <tbody>
                            <tr>
                                <th scope="row">@Html.LabelFor(item => item.CategoryModel.Name)</th>
                                <td>
                                    @Html.TextBoxFor(item => item.CategoryModel.Name, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(item => item.CategoryModel.Name)
                                </td>
                            </tr>
                            <tr>
                                <th scope="row">@Html.LabelFor(item => item.CategoryModel.ColorCode)</th>
                                <td>
                                    @Html.HiddenFor(item => item.CategoryModel.ColorCode, new { @class = "categoryColorCode" })
                                    <div id="ColorCodePicker"></div>
                                    @Html.ValidationMessageFor(item => item.CategoryModel.ColorCode)
                                </td>
                            </tr>
                            <tr>
                                <th scope="row">@Html.LabelFor(item => item.CategoryModel.ParentId)</th>
                                <td>
                                    @if (Model.CategoryModel.HasChildren)
                                    {
                                        <span>Categorie is al zelf een hoofdcategorie</span>
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(item => item.CategoryModel.ParentId, Model.AvailableParentCategories)
                                        @Html.ValidationMessageFor(item => item.CategoryModel.ParentId)
                                    }
                                </td>
                            </tr>
                            <tr>
                                <th scope="row">@Html.LabelFor(item => item.CategoryModel.IsRegular)</th>
                                <td>
                                    @if (Model.CategoryModel.ParentCategoryIsRegular)
                                    {
                                        @Html.CheckBoxFor(item => item.CategoryModel.ParentCategoryIsRegular, new { @class = "form-control", @disabled = "disabled" })
                                    }
                                    else
                                    {
                                        @Html.CheckBoxFor(item => item.CategoryModel.IsRegular, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(item => item.CategoryModel.IsRegular)
                                    }
                                </td>
                            </tr>
                            @if (Model.CategoryModel.Id > 0)
                            {
                                <tr>
                                    <th scope="row">
                                        Mappings
                                    </th>
                                    <td>
                                        <table class="table">
                                            <thead>
                                                <tr>
                                                    <th scope="col">
                                                        Kolom
                                                    </th>
                                                    <th scope="col">
                                                        Vergelijking
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var mapping in Model.CategoryModel.Mappings)
                                                {
                                                    <tr>
                                                        <td>
                                                            @Html.DisplayFor(model => mapping.ColumnTypeId)
                                                        </td>
                                                        <td>
                                                            @(mapping.MatchValue.Length < 50 ? mapping.MatchValue : mapping.MatchValue.Substring(0, 47) + "...")
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-default" data-toggle="modal" data-target="#mappingModal" onclick="selectedAction = 'Edit';selectedMapping = @mapping.Id;">Aanpassen</button>
                                                            <button type="button" class="btn btn-danger" onclick="RemoveCategoryMapping(@mapping.Id, '@mapping.MatchValue', @Model.CategoryModel.Id)">Verwijderen</button>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#mappingModal" onclick="selectedMapping = null">Toevoegen</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="panel-footer">
                    <button type="submit" class="btn btn-success" value="Save">Opslaan</button>
                </div>
            </div>
        </div>
    </div>

    @*if (Model.CategoryModel.Id > 0)
        {
            <div class="row">
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        @if (Model.CategoryModel.Mappings.Any())
                        {
                            <div class="panel-heading">
                                Automatische toekenning
                            </div>
                            <div class="panel-body">
                                @await Html.PartialAsync("MappingTablePartial", Model.CategoryModel.Mappings)
                            </div>
                            <div class="panel-footer">
                                @Html.ActionLink("Categorie toekennen aan transacties", "UpdateCategoryToMappedTransactions", new { @categoryId = Model.CategoryModel.Id }, new { @class = "btn btn-primary" })
                            </div>
                        }
                        else
                        {
                            <div class="panel-heading">
                                Automatische toekenning
                            </div>
                            <div class="panel-body">
                                @Html.ActionLink("Transacties ophalen", "EditCategory", new { @categoryId = Model.CategoryModel.Id, @includeTransactions = true }, new { @class = "btn btn-primary" })
                            </div>
                        }
                    </div>
                </div>
            </div>
        }*@
}
<!-- Modal -->
<div class="modal fade" id="mappingModal" tabindex="-1" role="dialog" aria-labelledby="mappingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div id="mappingModalContent" class="modal-content">
        </div>
    </div>
</div>