@using System
@using System.Globalization
@using System.Linq
@using Sinance.Domain.Entities
@using Sinance.Web.Model

@model DashboardModel

@section scripts
    {
    <script type="text/javascript">
        var profitGraphCurrentYear;

        $(function () {
            CreateProfitGraph(@DateTime.Now.Year);
            CreatehistoryGraph(@DateTime.Now.Year);
            CreateExpensesPieChart(@DateTime.Now.AddMonths(-1).Year, @DateTime.Now.AddMonths(-1).Month);
        });

        function CreateExpensesPieChart(year, month) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExpensePercentagesPerMonth", "Graph")",
                data: { year, month },
                success: function (response) {

                    $("#expenses-chart-container").highcharts({
                        chart: {
                            type: 'pie',
                            options3d: {
                                enabled: true,
                                alpha: 45,
                                beta: 0
                            }
                        },
                        title: {
                            text: ''
                        },
                        credits: {
                            enabled: false
                        },
                        legend: {
                            enabled: false
                        },
                        tooltip: {
                            pointFormat: '<b>{point.percentage:.1f}%</b>'
                        },
                        plotOptions: {
                            pie: {
                                allowPointSelect: true,
                                cursor: 'pointer',
                                depth: 35,
                                dataLabels: {
                                    enabled: true,
                                    format: '{point.name} {point.percentage:.1f}%'
                                }
                            }
                        },
                        series: [{
                            type: 'pie',
                            data: response.objectData
                        }]
                    });
                }
            });
        }

        function CreatehistoryGraph(year) {
            $(".historyYearButton").removeClass("btn-primary");
            $("#historyYearButton" + year).addClass("btn-primary");

            $.ajax({
                type: "POST",
                url: "@Url.Action("BalanceHistory", "Graph")",
                data: { years: 1 },
                success: function (response) {

                    $(".historyYearButton").removeClass("btn-primary");
                    $("#historyYearButton" + year).addClass("btn-primary");

                    $("#historyGraph").highcharts({
                        chart: {
                            zoomType: "x"
                        },
                        title: {
                            text: ""
                        },
                        xAxis: {
                            type: "datetime"
                        },
                        yAxis: {
                            title: {
                                text: ""
                            }
                        },
                        credits: {
                            enabled: false
                        },
                        legend: {
                            enabled: false
                        },
                        tooltip: {
                            formatter: ChartCurrencyFormatter
                        },
                        plotOptions: {
                            area: {
                                fillColor: {
                                    linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                                    stops: [
                                        [0, Highcharts.getOptions().colors[0]],
                                        [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get("rgba")]
                                    ]
                                },
                                marker: {
                                    radius: 2
                                },
                                lineWidth: 1,
                                states: {
                                    hover: {
                                        lineWidth: 1
                                    }
                                },
                                threshold: null
                            }
                        },
                        series: [
                            {
                                type: "area",
                                name: "euro",
                                data: response.objectData
                            }
                        ]
                    });
                }
            });
        }

        function CreateProfitGraph(year) {
            profitGraphCurrentYear = year;
            $("#profitGraphYearSpan").text(year);

            $.ajax({
                type: "POST",
                url: "@Url.Action("ProfitPerMonthForYear", "Graph")",
                data: { year: year },
                success: function (response) {

                    var chart = new Highcharts.Chart({
                        chart: {
                            renderTo: "profitGraph",
                            type: "column",
                            zoomType: "x"
                        },
                        title: {
                            floating: true,
                            text: ""
                        },
                        yAxis: {
                            title: {
                                text: ""
                            }
                        },
                        xAxis: {
                            categories: ["Jan", "Feb", "Maa", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"]
                        },
                        credits: {
                            enabled: false
                        },
                        plotOptions: {
                            column: {
                                depth: 25
                            }
                        },
                        legend: {
                            enabled: false
                        },
                        tooltip: {
                            formatter: ChartCurrencyFormatter
                        },
                        series: [
                            {
                                data: response.objectData
                            }
                        ]
                    });
                }
            });
        }
    </script>
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Dashboard</h1>
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <div class="row">
            <div class="col-lg-3">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-money fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div class="huge">@(Model.BankAccounts.Sum(item => item.CurrentBalance).GetValueOrDefault().ToString("C", CultureInfo.CurrentCulture))</div>
                                <div>Balans</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="panel panel-yellow">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-arrow-@(Model.LastMonthProfitLoss > 0 ? "up" : "down") fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div class="huge">@Model.LastMonthProfitLoss.ToString("C2")</div>
                                <div>Winst/Verlies afgelopen maand</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="panel panel-green">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-money fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div class="huge">@Model.LastMonthIncome.ToString("C2")</div>
                                <div>Inkomsten vorige maand</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="panel panel-red">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-fire fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div class="huge">@Model.LastMonthExpenses.ToString("C2")</div>
                                <div>Uitgaves vorige maand</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-7">
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bar-chart-o fa-fw"></i> Winst/Verlies
                        <div class="pull-right">
                            <a href="#" onclick=" CreateProfitGraph(profitGraphCurrentYear - 1);"><i class="fa fa-chevron-left fa-fw"></i></a> <span id="profitGraphYearSpan"></span> <a href="#" onclick="CreateProfitGraph(profitGraphCurrentYear + 1);"><i class="fa fa-chevron-right fa-fw"></i></a>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div id="profitGraph" style="height: 400px;"></div>
                    </div>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bar-chart-o fa-fw"></i> Balans Historie
                    </div>
                    <div class="panel-body">
                        <div id="historyGraph" style="height: 400px;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-5">
        <div class="panel panel-default">
            <div class="panel-heading">
                <i class="fa fa-fire"></i> Grootste uitgaves
            </div>
            <div class="panel-body">
                <table class="table table-condensed">
                    <thead>
                        <tr>
                            <th>Datum</th>
                            <th>Titel</th>
                            <th class="amountColumn">Bedrag</th>
                            <th>Omschrijving</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Transaction transaction in Model.BiggestExpenses)
                        {
                            <tr>
                                <td style="text-wrap:none;white-space:nowrap;">@transaction.Date.ToString("dd-MM-yyyy")</td>
                                <td style="text-wrap:none;white-space:nowrap;">@transaction.Name</td>
                                <td style="text-wrap:none;white-space:nowrap;">@transaction.Amount.ToString("C2")</td>
                                <td style="word-wrap:break-word;">@(transaction.Description != null && transaction.Description.Length > 40 ? transaction.Description.Substring(0, 40) : transaction.Description)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <i class="fa fa-fire"></i> Uitgaves afgelopen maand
            </div>
            <div class="panel-body">
                <div id="expenses-chart-container"></div>
            </div>
        </div>
    </div>
</div>